name: Azure Web App Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository code
    - name: 'Checkout GitHub repository'
      uses: actions/checkout@v2

    # Step 2: Login to Azure using the service principal
    - name: 'Login to Azure'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 3: Create the Resource Group (if it doesn't exist)
    - name: 'Create Resource Group'
      run: |
        az group create --name myResourceGroup --location eastus

    # Step 4: Verify the App Service Plan exists
    - name: 'Check if App Service Plan exists'
      id: check_plan
      run: |
        if az appservice plan show --name myAppServicePlan --resource-group myResourceGroup; then
          echo "plan_exists=true" >> $GITHUB_ENV
        else
          echo "plan_exists=false" >> $GITHUB_ENV
        fi

    # Step 5: Create the App Service Plan if it doesnâ€™t exist
    - name: 'Create App Service Plan'
      if: env.plan_exists == 'false'
      run: |
        az appservice plan create --name myAppServicePlan --resource-group myResourceGroup --sku B1 --is-linux

    # Step 6: Check if the Web App exists and set an output variable
    - name: 'Check if Web App exists'
      id: check_app
      run: |
        if az webapp show --resource-group myResourceGroup --name myUniqueAzureApp; then
          echo "exists=true" >> $GITHUB_ENV
        else
          echo "exists=false" >> $GITHUB_ENV
        fi

    # Step 7: Create the Web App if it doesn't exist
    - name: 'Create Azure Web App'
      if: env.exists == 'false'
      run: |
        az webapp create --resource-group myResourceGroup --plan myAppServicePlan --name myUniqueAzureApp --runtime "node|16-lts"

    # Step 8: Deploy static files directly to the Azure Web App
    - name: 'Deploy to Azure Web App'
      run: |
        az webapp deploy --resource-group myResourceGroup --name myUniqueAzureApp --src-path .
